@{
    Layout = "_DashboardLayout";
    ViewData["Title"] = "Administration";
    ViewData["SubTitle"] = "Admin interface";
}

<p>Welcome to the administration panel for LEFT.</p>

<div>

  <!-- Nav tabs -->
  <ul class="nav nav-tabs" role="tablist">
    <li role="presentation" class="active"><a href="#analyses" aria-controls="profile" role="tab" data-toggle="tab">Analyses</a></li>
    <li role="presentation"><a href="#users" aria-controls="messages" role="tab" data-toggle="tab">Users</a></li>
  </ul>

  <!-- Tab panes -->
  <div class="tab-content">
    <div role="tabpanel" class="tab-pane active" id="analyses">
      <table class="table">
        <thead>
          <tr>
            <th>Analysis ID</th>
            <th>Name</th>
            <th>Description</th>
            <th>Report</th>
            <th>ProData</th>
            <th>Submitted By</th>
            <th>Created</th>
            <th>Actions</th>
          </tr>
        </thead>
        <tbody data-bind="foreach: analyses">
            <tr>
                <td><p data-bind="text: id"></p></td>
                <td><p data-bind="text: name"></p></td>
                <td><p data-bind="text: description"></p></td>
                <td><span data-bind="text: status, attr:{ 'class': 'label label-' + status}"></span></td>
                <td><span data-bind="text: proStatus, attr:{ 'class': 'label label-' + proStatus}"></span></td>
                <td><p data-bind="text: submittedBy"></p></td>
                <td><p data-bind="text: dateAdded"></p></td>
                <td>
                  <div data-bind="visible: status == 'Completed'">
                    <a target="_blank" class="btn btn-default" data-bind="attr: { href: '/Job/Report/' + id }">Download Report</a>
                  </div>
                  <div data-bind="visible: proStatus == 'Completed'">
                    <a target="_blank" class="btn btn-default" data-bind="attr: { href: '/Job/ProData/' + id }">Download Pro Data</a>
                  </div>
                  <br/>
                  <!-- <button data-bind="visible: status == 'Cascading' || status == 'Processing', click: $parent.stopAnalysis" class="btn btn-default">Stop</button> -->
                  <button data-bind="visible: status == 'Failed' || status == 'Completed' || status == 'Queued' || status == 'Processing', click: $parent.restartAnalysis" class="btn btn-default">Rerun Free Report</button>
                  <button data-bind="visible: proStatus == 'Failed' || proStatus == 'Completed' || proStatus == 'Submitted' || proStatus == 'Queued' || proStatus == 'Processing', click: $parent.restartPro" class="btn btn-default">Recreate Pro Data</button>
                </td>
            </tr>
        </tbody>
</table>
    </div>
    <div role="tabpanel" class="tab-pane" id="users">
            <table class="table">
        <thead>
          <tr>
            <th>Name</th>
            <th>Email</th>
            <th>Organisation</th>
            <th>Jobs</th>
            <th>Credits</th>
            <th>Registered</th>
            <th>Actions</th>
          </tr>
        </thead>
        <tbody data-bind="foreach: users">
            <tr>
                <td><p data-bind="text: name"></p></td>
                <td><p data-bind="text: userName"></p></td>
                <td><p data-bind="text: organisation"></p></td>
                <td><span data-bind="text: activeJobs"></span> active. <span data-bind="text: completeJobs"></span> complete.</td>
                <td>
                  <p data-bind="text: credits"></p>
                  <a class="btn btn-default" data-bind="click: $parent.addCredits.bind($data, 1)">+1</a>
                  <a class="btn btn-default" data-bind="click: $parent.addCredits.bind($data, 10)">+10</a>
                </td>
                <td><p data-bind="text: registrationDate"></p></td>
                <td>
                  <button data-bind="click: $parent.makeAdmin" class="btn btn-default">Make Admin</button>
                </td>
            </tr>
        </tbody>
      </table>
    </div>
  </div>

</div>

<script type="text/javascript">

function AdminViewModel(users, analyses) {
    var self = this;
    self.analyses = ko.observableArray([]);
    self.users = ko.observableArray([]);

    self.restartAnalysis = function(analysis) {
      if (confirm('Restart analysis?')) {
        console.log('restarting analysis #' + analysis.id);
        $.ajax({
          url: '/Administration/Home/RestartJob?jobId=' + analysis.id,
          cache: false,
          success: function(updatedJob) {
            console.log('Job was restarted');
            self.updateAnalyses;
          }
        })
      }
    }

    self.restartPro = function(analysis) {
      if (confirm('Restart pro data generation?')) {
        console.log('restarting pro data for #' + analysis.id);
        $.ajax({
          url: '/Administration/Home/RestartPro?jobId=' + analysis.id,
          cache: false,
          success: function(updatedJob) {
            console.log('Job was restarted');
            self.updateAnalyses;
          }
        })
      }
    }

    self.stopAnalysis = function(analysis) {
      console.log('stopping analysis #' + analysis.id);
      $.ajax({
        url: '/Administration/Home/StopJob?jobId=' + analysis.id,
        cache: false,
        success: function(updatedJob) {
          console.log('Job was stopped');
          self.updateAnalyses;
        }
      })
    }

    self.updateAnalyses = function() {
      $.ajax({
        url: "/Administration/Home/GetJobs",
        cache: false,
        success: function(serverAnalyses)
        {
          self.analyses(serverAnalyses);
        }
      });
    }

    self.updateUsers = function() {
      $.ajax({
          url: "/Administration/Home/GetUsers",
          cache: false,
          success: function(users){
            self.users(users);
          }
      });
    }

    self.addCredits = function (credits, user) {
      if (confirm('Give ' + credits + ' *free* credits to ' + user.userName + '?')) {
        $.ajax({
            url: '/Administration/Home/AddCredits?userId=' + user.id + '&credits=' + credits,
            cache: false,
            success: function(updatedUser) {
              console.log('Gave ' + credits + ' free credit(s) to ' + user.userName);
              self.updateUsers;
            }
        })
      }
    }

    self.makeAdmin = function (user) {
      if (confirm('are you sure you want to make ' + user.userName + ' a LEFT administrator?')) {
          $.ajax({
            url: '/Administration/Home/UserAdmin?id=' + user.id + '&userIsAdmin=true',
            cache: false,
            success: function(updatedUser) {
              console.log('User was made admin: ' + updatedUser.userName);
              self.updateUsers;
            }
          })
      }
    }

}

$(document).ready(function() {
  var vm = new AdminViewModel();
  window.setInterval(vm.updateAnalyses,5000);
  window.setInterval(vm.updateUsers,60000);
  vm.updateUsers();
  vm.updateAnalyses();
  ko.applyBindings(vm);
});
</script>

@section Scripts {
    <environment names="Development">
        <script src="~/lib/knockout/knockout-min.js"></script>
    </environment>
    <environment names="Staging,Production">
        <script src="https://ajax.aspnetcdn.com/ajax/knockout/knockout-3.3.0.js"></script>
    </environment>
}